plugins {
    id 'java'
    id 'war'
}

group = 'org.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'
repositories {
    mavenCentral()
}

war {
    // 웹 애플리케이션의 루트와 WEB-INF 디렉터리에 파일 추가
    from('src/main/webapp') { into 'WEB-INF' }

    // 중복된 파일을 발견할 경우 덮어쓰기로 처리
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencies {
    // Spring
// https://mvnrepository.com/artifact/org.springframework/spring-context
    implementation group: 'org.springframework', name: 'spring-context', version: '6.0.18'
// https://mvnrepository.com/artifact/org.springframework/spring-web
    implementation group: 'org.springframework', name: 'spring-web', version: '6.0.18'
// https://mvnrepository.com/artifact/org.springframework/spring-core
    implementation group: 'org.springframework', name: 'spring-core', version: '6.0.18'
    implementation 'org.springframework:spring-webmvc:6.0.18'

    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'

    // Swagger 2 의존성
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // AspectJ
    implementation 'org.aspectj:aspectjrt:1.6.10'
    implementation 'org.aspectj:aspectjweaver:1.9.6'

    // Logging
    implementation 'org.slf4j:slf4j-api:1.6.6'
    runtimeOnly 'org.slf4j:jcl-over-slf4j:1.6.6'
    runtimeOnly 'org.slf4j:slf4j-log4j12:1.6.6'
    runtimeOnly 'log4j:log4j:1.2.15'

    // @Inject
    implementation 'javax.inject:javax.inject:1'

    // Servlet
// https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api
    providedCompile group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.0.0'

    implementation group: 'jakarta.servlet.jsp', name: 'jakarta.servlet.jsp-api', version: '3.1.0'
// https://mvnrepository.com/artifact/jakarta.servlet.jsp.jstl/jakarta.servlet.jsp.jstl-api
    implementation group: 'jakarta.servlet.jsp.jstl', name: 'jakarta.servlet.jsp.jstl-api', version: '3.0.0'

    // Test
    testImplementation 'junit:junit:4.7'

    // JDBC
    implementation group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: '23.3.0.23.09'
    implementation group: 'com.oracle.ojdbc', name: 'orai18n', version: '19.3.0.0'
    implementation 'mysql:mysql-connector-java:5.1.29'

    // MyBatis


    implementation 'commons-beanutils:commons-beanutils:1.8.0'
/*    commons-beanutils는 Java Reflection과 Introspection을 사용하여,
    동적으로 JavaBean의 프로퍼티를 조작하는 데 사용됩니다.*/

            implementation 'commons-dbcp:commons-dbcp:1.2.2'
/*    commons-dbcp는 데이터베이스 커넥션 풀(Database Connection Pool) 관리를 위한 라이브러리입니다.
    데이터베이스 연결을 재사용함으로써 성능을 향상시키고, 리소스 사용을 최적화하는 데 도움을 줍니다.*/


// https://mvnrepository.com/artifact/org.mybatis/mybatis
    implementation group: 'org.mybatis', name: 'mybatis', version: '3.5.9'
// https://mvnrepository.com/artifact/org.mybatis/mybatis-spring
    implementation group: 'org.mybatis', name: 'mybatis-spring', version: '2.0.7'
// https://mvnrepository.com/artifact/cglib/cglib-nodep
    implementation group: 'cglib', name: 'cglib-nodep', version: '3.3.0'
/*    cglib은 코드 생성 라이브러리로, 주로 런타임에 객체의 프록시를 생성하거나 클래스를 확장하는 데 사용됩니다.
Spring Framework에서는 주로 프록시 기반의 AOP(Aspect-Oriented Programming) 구현이나
특정 bean에 대한 동적 서브클래스 생성에 사용됩니다.*/



            // Tiles
    implementation 'org.apache.tiles:tiles-core:2.2.2'
    implementation 'org.apache.tiles:tiles-jsp:2.2.2'
    implementation 'org.apache.tiles:tiles-servlet:2.2.2'

    // Commons
    implementation 'commons-io:commons-io:2.4'
    implementation 'commons-fileupload:commons-fileupload:1.3.1'

    // jQuery
    implementation 'org.webjars:jquery:2.2.1'

    // Thumbnailator
    implementation 'net.coobird:thumbnailator:0.4.8'

    // JSON
    implementation 'net.sf.json-lib:json-lib:2.4:jdk15'
}


war {
    from 'src/main/webapp' // adds a file-set to the root of the archive
    webInf { from 'src/main/webapp/WEB-INF' } // adds a file-set to the WEB-INF directory
}
